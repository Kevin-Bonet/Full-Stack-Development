6/20/2024
    -watching this video https://www.youtube.com/watch?v=nu_pCVPKzTk
    -web development involves using html for structyure, css for styling and javascript for functionality
    -replit is used as the coding environment for instruction 
    -lets make relevant files
    -html uses tags with things in between the opening and closing tags. 
    -examples: 
    <h1>Hi, welcome</h1> 
    <p>This is a  new paragraph</p>
    <tag>The content</tag>
    -stopping point 10:14
6/21/2024
    -continuing from last time
    -to start a webpage, you need a <!DOCTYPE> declaration
    -everything within the declaration type like for example <html>stuff</html>
    -<body> tag goes within html tag
    -within the body tag we can use heading tags h1 to h6, lower the number, larger the text
    -<p> paragraph tag is for non header text, it wont be in bold like header text.
    -<a> is html attributes, it takes in parameters:
        example:
        <a href="https://google.com">Click this link</a>
    -<img> image tag doesnt need a closing tag, it just needs a source
        example:
        <img src="https://images.unsplash.com/photo-1493612276216-ee3925520721?q=80&w=1000&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxzZWFyY2h8Mnx8cmFuZG9tfGVufDB8fDB8fHww">
    -Stopping at 21:30
6/22/2024
    -continuing from last time
    -within an image tag, we can include attributes that modify the image, like height
    -within the paragraph tag we can also include attributes, for example: title
    -new line can be achieved by using <br> tag whihc is short for break
    -if we use a <pre> tag, we can write using several lines without having to use the break tag. Both the tag and content are space and line sensitive.
    -The <hr> tag is like the break tag, but for inserting horizontal lines into text
    -now moving on the formatting elements
    -<b> can be used to write bold text
    -<strong> is the same as <b>
    -stopping point 32:30
7/4/2024
    -continuing from last time
    -<em></em> is for emphasized text
    -<i></i> is for italic text, same as em
    -<mark></mark is for highlighting text
    -<del></del> is for strikethrough text
    -stopping point 35:37
7/10/2024
    -continuing from last time
    -underline using <ins></ins>
    -make small text using <small></small>
    -make subscripts using 0<sub></sub>
    -make superscripts using 0<sup></sup>
    -change text colors by using the style="color:blue" and or "background-color:red" attribute within header tags
    -separate style attributes using semicolon ;
    -comment things out using <!-- at the start of the comment and --> at the end of the comment
    -make your links open new tabs by using the target attribute within a tags
    -stopping at 45:35
7/15/2024
    -continuing from last time
    -there is a difference between relative url and absolute url
    -in the link in new tab example, we could replace the google link with /go and get the replit website /go, since this is also a relative website
    -to clarify: google.com is a relative link, https://google.com is an absolute link, unrelated to the replit website we are using
    -we can get links to emails by using href:"mailto:username@email.com" within the a tag
    -titles and favicons...
    -title refers to what appears at the top of the tab:
        <head>
            <title>Write your desired title</title>
        </head>
    -favicon is the image/logo appearing before the title at the top of the tab
        <head>
            <title>Write your desired title</title>
            <link rel="icon" href="image-link">
        </head>
    -tables: in the body tag, use the <table></table> tag and table rows using <tr></tr> and table headings using <th></th> and table data with <td></td>
    -lists: for unordered list use <ul></ul>, for ordered lists use <ol></ol>for list items use <li></li>
    -if we want out lists to be descriptive use description lists using <dl></dl>, for each item use <dt></dt> and for the description per item use <dd></dd>
    -block elements and inline elements: block starts in a new line, inline doesnt and doesnt have a space before and after the element
    -stopping at 1:00:00 1st hour milestone reached
7/22/2024
    -div tag <div></div> is good for dividing a page into several sections
    -a benefit of dividing a page into several sections by using divs is that you can change attributes within a particular div
    -stopping at 1:03:00
7/23/2024
    -There are tags like div that dont take up so much space, like a tags and b tags
    -you can use a p tag and put a b tag within it
    -iframe: <iframe></iframe> is used to use a webpage withing a webpage
    -there are signs we can write using their code, for example copywrite sign can be:
        U+000A9
        UNICODE
        &#xa9;
        HEX CODE
        &#169;
        HTML CODE
        &copy;
        HTML ENTITY
    -stopping at 1:10:55, hoping to do more later today
7/24/2024
    -Forms:<form><label></label><input type="text"></form>, these are examples of tag usage. more details on implementation on the html file
    -stopping at 1:20:00
7/26/2024
    -between the form tags you set up all of the elements you want, but within the form tag is where you set up where the information goes and the behaviour you want the form to take
    -action="" attribute within the form tag is for writing the place where the form info is going, it could be another html file or a link
    -GET and POST are the two options available to dictate how to form behaves, you select it in the form tag with a method=""
    -GET puts the details in the url bar, POST does not do that. GET is default if one is not selected
    -Locally setting up an HTML file (i think i can skip this)
HTML SECTION COMPLETE, NOW FOR CSS SECTION 
    -connect your ccs style sheet to your html by using a <link rel="stylesheet" href=""> tag in the html file
    -in css our syntax involves a selector and an declaration. in simple terms the thin you wanna change in the start, and the changes you make between curly braces
    -for example if in css file i say body{}, im affecting the <body></body> tag in my html file
    -So ive spent a while debugging an issue with my css file. It was loading fine in firefox but not in chrome. After much research my understanding is that my html file was loading from a file:/// protocol, which causes the discrepancy between firefox and chrome, because the browsers have different security protocols. Chrome in particular makes it not possible to lead .css and  .js files.
        -The solution I found was to host the website using the live server extension available for VSC. This made chrome use the http:// protocol instead and i could finally see my css settings in action in both browsers (http://127.0.0.1:5500/index.html)
    -comment in css using /* */
    -use id as attributes in tags to help css affect that element in specific and access in css using #
    -1:41:35
8/1/2024
    -in css file you can select specific elements by selecting its class
    -in css file using only an asterisk makes everything in the html be affected by whatever is between those specific brackets
    -in css file you can use same brackets and select several elements using a comma
    -backgrounds in css
    -1:48:00

